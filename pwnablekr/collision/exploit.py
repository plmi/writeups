#!/usr/bin/env python3

# brute hashcode for pwnable.kr challenge: col

import random
import math
import struct

MAX_INT = math.pow(2,31) - 1
hashcode = 0x21DD09EC

def dumpHexValues(hexValues):
  #struct.pack('<i', 0x02785c52).hex()
  for hexValue in hexValues:
    print(hexValue)
    hexString = ''.join([f'\\x{c:02x}' for c in struct.pack('<i', int(hexValue, 16))])
    print(hexString)
  print();

def containsBadChar(hexvalues):
  return any(("00" or "0a" or "0d") in x for x in hexvalues)

def brute(hashcode):
  # generate 4 random numbers, calcuate the 4th
  while True:
    numbers = random.sample(range(1, 0x7fffffff), 4)
    total = sum(numbers)
    if total >= hashcode:
      continue

    difference = hashcode - total
    numbers.append(difference)

    hexvalues = [f'0x{hex(number)[2:].zfill(8)}' for number in numbers]

    if containsBadChar(hexvalues):
      print('contains bad char', hexvalues)
      continue

    dumpHexValues(hexvalues)
    break;

brute(hashcode)
